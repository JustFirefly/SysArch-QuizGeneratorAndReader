
Consider the following MIPS code:

1. add a, b, c

2. add b, c ,d

3. add f, e , b

4. add h, k, g

5. add m, k, w

Which of the following compiler optimisations could avoid data hazards in this code assuming a 4 stage pipeline (i.e., 1. fetch

instruction; 2. Decode and load data; 3. Execute instruction; 4. Write to memory) with no forwarding?
